//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use super::sea_orm_active_enums::UserType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "ChatMessage")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub msg_id: String,
    pub channel_id: i32,
    pub channel: String,
    pub nick: String,
    pub display_name: String,
    pub user_id: i32,
    pub badge_info: Option<String>,
    pub badges: Option<String>,
    pub bits: i32,
    pub color: String,
    pub moderator: i8,
    pub reply_msg_id: Option<String>,
    pub reply_msg_nick: Option<String>,
    pub reply_msg_display_name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub reply_msg_body: Option<String>,
    pub subscriber: i8,
    pub timestamp: DateTimeUtc,
    pub turbo: i8,
    pub user_type: UserType,
    pub vip: i8,
    pub admin: i8,
    #[sea_orm(column_type = "Text")]
    pub body: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub emotes: Option<String>,
    pub deleted: i8,
    pub deleted_timestamp: Option<DateTimeUtc>,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
